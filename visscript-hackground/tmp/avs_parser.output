Terminals which are not used

   FUNCTION


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: statement_list
    2                 | /* empty */

    3 statement_list: statement
    4               | statement_list statement

    5 statement: ';'
    6          | expr ';'

    7 expr: primary
    8     | '-' expr
    9     | '+' expr
   10     | expr '+' expr
   11     | expr '-' expr
   12     | expr '*' expr
   13     | expr '/' expr
   14     | expr '%' expr
   15     | expr '&' expr
   16     | expr '|' expr
   17     | expr '=' expr
   18     | '(' expr ')'

   19 fn_expr: /* empty */
   20        | expr
   21        | fn_expr ',' expr

   22 primary: CONSTANT
   23        | IDENTIFIER
   24        | IDENTIFIER '(' fn_expr ')'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 14
'&' (38) 15
'(' (40) 18 24
')' (41) 18 24
'*' (42) 12
'+' (43) 9 10
',' (44) 21
'-' (45) 8 11
'/' (47) 13
';' (59) 5 6
'=' (61) 17
'|' (124) 16
error (256)
IDENTIFIER (258) 23 24
CONSTANT (259) 22
FUNCTION (260)
UNARY (261)


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
translation_unit (20)
    on left: 1 2, on right: 0
statement_list (21)
    on left: 3 4, on right: 1 4
statement (22)
    on left: 5 6, on right: 3 4
expr (23)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18, on right: 6 8 9 10 11
    12 13 14 15 16 17 18 20 21
fn_expr (24)
    on left: 19 20 21, on right: 21 24
primary (25)
    on left: 22 23 24, on right: 7


state 0

    0 $accept: . translation_unit $end
    1 translation_unit: . statement_list
    2                 | .  [$end]
    3 statement_list: . statement
    4               | . statement_list statement
    5 statement: . ';'
    6          | . expr ';'
    7 expr: . primary
    8     | . '-' expr
    9     | . '+' expr
   10     | . expr '+' expr
   11     | . expr '-' expr
   12     | . expr '*' expr
   13     | . expr '/' expr
   14     | . expr '%' expr
   15     | . expr '&' expr
   16     | . expr '|' expr
   17     | . expr '=' expr
   18     | . '(' expr ')'
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    ';'         shift, and go to state 5
    '('         shift, and go to state 6

    $default  reduce using rule 2 (translation_unit)

    translation_unit  go to state 7
    statement_list    go to state 8
    statement         go to state 9
    expr              go to state 10
    primary           go to state 11


state 1

   23 primary: IDENTIFIER .  ['=', '|', '&', '+', '-', '*', '/', '%', ';', ')', ',']
   24        | IDENTIFIER . '(' fn_expr ')'

    '('  shift, and go to state 12

    $default  reduce using rule 23 (primary)


state 2

   22 primary: CONSTANT .

    $default  reduce using rule 22 (primary)


state 3

    7 expr: . primary
    8     | . '-' expr
    9     | . '+' expr
    9     | '+' . expr
   10     | . expr '+' expr
   11     | . expr '-' expr
   12     | . expr '*' expr
   13     | . expr '/' expr
   14     | . expr '%' expr
   15     | . expr '&' expr
   16     | . expr '|' expr
   17     | . expr '=' expr
   18     | . '(' expr ')'
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 6

    expr     go to state 13
    primary  go to state 11


state 4

    7 expr: . primary
    8     | . '-' expr
    8     | '-' . expr
    9     | . '+' expr
   10     | . expr '+' expr
   11     | . expr '-' expr
   12     | . expr '*' expr
   13     | . expr '/' expr
   14     | . expr '%' expr
   15     | . expr '&' expr
   16     | . expr '|' expr
   17     | . expr '=' expr
   18     | . '(' expr ')'
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 6

    expr     go to state 14
    primary  go to state 11


state 5

    5 statement: ';' .

    $default  reduce using rule 5 (statement)


state 6

    7 expr: . primary
    8     | . '-' expr
    9     | . '+' expr
   10     | . expr '+' expr
   11     | . expr '-' expr
   12     | . expr '*' expr
   13     | . expr '/' expr
   14     | . expr '%' expr
   15     | . expr '&' expr
   16     | . expr '|' expr
   17     | . expr '=' expr
   18     | . '(' expr ')'
   18     | '(' . expr ')'
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 6

    expr     go to state 15
    primary  go to state 11


state 7

    0 $accept: translation_unit . $end

    $end  shift, and go to state 16


state 8

    1 translation_unit: statement_list .  [$end]
    4 statement_list: statement_list . statement
    5 statement: . ';'
    6          | . expr ';'
    7 expr: . primary
    8     | . '-' expr
    9     | . '+' expr
   10     | . expr '+' expr
   11     | . expr '-' expr
   12     | . expr '*' expr
   13     | . expr '/' expr
   14     | . expr '%' expr
   15     | . expr '&' expr
   16     | . expr '|' expr
   17     | . expr '=' expr
   18     | . '(' expr ')'
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    ';'         shift, and go to state 5
    '('         shift, and go to state 6

    $default  reduce using rule 1 (translation_unit)

    statement  go to state 17
    expr       go to state 10
    primary    go to state 11


state 9

    3 statement_list: statement .

    $default  reduce using rule 3 (statement_list)


state 10

    6 statement: expr . ';'
   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '%' expr
   15     | expr . '&' expr
   16     | expr . '|' expr
   17     | expr . '=' expr

    '='  shift, and go to state 18
    '|'  shift, and go to state 19
    '&'  shift, and go to state 20
    '+'  shift, and go to state 21
    '-'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '%'  shift, and go to state 25
    ';'  shift, and go to state 26


state 11

    7 expr: primary .

    $default  reduce using rule 7 (expr)


state 12

    7 expr: . primary
    8     | . '-' expr
    9     | . '+' expr
   10     | . expr '+' expr
   11     | . expr '-' expr
   12     | . expr '*' expr
   13     | . expr '/' expr
   14     | . expr '%' expr
   15     | . expr '&' expr
   16     | . expr '|' expr
   17     | . expr '=' expr
   18     | . '(' expr ')'
   19 fn_expr: .  [')', ',']
   20        | . expr
   21        | . fn_expr ',' expr
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'
   24        | IDENTIFIER '(' . fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 6

    $default  reduce using rule 19 (fn_expr)

    expr     go to state 27
    fn_expr  go to state 28
    primary  go to state 11


state 13

    9 expr: '+' expr .  ['=', '|', '&', '+', '-', '*', '/', '%', ';', ')', ',']
   10     | expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '%' expr
   15     | expr . '&' expr
   16     | expr . '|' expr
   17     | expr . '=' expr

    $default  reduce using rule 9 (expr)

    Conflict between rule 9 and token '=' resolved as reduce ('=' < UNARY).
    Conflict between rule 9 and token '|' resolved as reduce ('|' < UNARY).
    Conflict between rule 9 and token '&' resolved as reduce ('&' < UNARY).
    Conflict between rule 9 and token '+' resolved as reduce ('+' < UNARY).
    Conflict between rule 9 and token '-' resolved as reduce ('-' < UNARY).
    Conflict between rule 9 and token '*' resolved as reduce ('*' < UNARY).
    Conflict between rule 9 and token '/' resolved as reduce ('/' < UNARY).
    Conflict between rule 9 and token '%' resolved as reduce ('%' < UNARY).


state 14

    8 expr: '-' expr .  ['=', '|', '&', '+', '-', '*', '/', '%', ';', ')', ',']
   10     | expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '%' expr
   15     | expr . '&' expr
   16     | expr . '|' expr
   17     | expr . '=' expr

    $default  reduce using rule 8 (expr)

    Conflict between rule 8 and token '=' resolved as reduce ('=' < UNARY).
    Conflict between rule 8 and token '|' resolved as reduce ('|' < UNARY).
    Conflict between rule 8 and token '&' resolved as reduce ('&' < UNARY).
    Conflict between rule 8 and token '+' resolved as reduce ('+' < UNARY).
    Conflict between rule 8 and token '-' resolved as reduce ('-' < UNARY).
    Conflict between rule 8 and token '*' resolved as reduce ('*' < UNARY).
    Conflict between rule 8 and token '/' resolved as reduce ('/' < UNARY).
    Conflict between rule 8 and token '%' resolved as reduce ('%' < UNARY).


state 15

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '%' expr
   15     | expr . '&' expr
   16     | expr . '|' expr
   17     | expr . '=' expr
   18     | '(' expr . ')'

    '='  shift, and go to state 18
    '|'  shift, and go to state 19
    '&'  shift, and go to state 20
    '+'  shift, and go to state 21
    '-'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '%'  shift, and go to state 25
    ')'  shift, and go to state 29


state 16

    0 $accept: translation_unit $end .

    $default  accept


state 17

    4 statement_list: statement_list statement .

    $default  reduce using rule 4 (statement_list)


state 18

    7 expr: . primary
    8     | . '-' expr
    9     | . '+' expr
   10     | . expr '+' expr
   11     | . expr '-' expr
   12     | . expr '*' expr
   13     | . expr '/' expr
   14     | . expr '%' expr
   15     | . expr '&' expr
   16     | . expr '|' expr
   17     | . expr '=' expr
   17     | expr '=' . expr
   18     | . '(' expr ')'
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 6

    expr     go to state 30
    primary  go to state 11


state 19

    7 expr: . primary
    8     | . '-' expr
    9     | . '+' expr
   10     | . expr '+' expr
   11     | . expr '-' expr
   12     | . expr '*' expr
   13     | . expr '/' expr
   14     | . expr '%' expr
   15     | . expr '&' expr
   16     | . expr '|' expr
   16     | expr '|' . expr
   17     | . expr '=' expr
   18     | . '(' expr ')'
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 6

    expr     go to state 31
    primary  go to state 11


state 20

    7 expr: . primary
    8     | . '-' expr
    9     | . '+' expr
   10     | . expr '+' expr
   11     | . expr '-' expr
   12     | . expr '*' expr
   13     | . expr '/' expr
   14     | . expr '%' expr
   15     | . expr '&' expr
   15     | expr '&' . expr
   16     | . expr '|' expr
   17     | . expr '=' expr
   18     | . '(' expr ')'
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 6

    expr     go to state 32
    primary  go to state 11


state 21

    7 expr: . primary
    8     | . '-' expr
    9     | . '+' expr
   10     | . expr '+' expr
   10     | expr '+' . expr
   11     | . expr '-' expr
   12     | . expr '*' expr
   13     | . expr '/' expr
   14     | . expr '%' expr
   15     | . expr '&' expr
   16     | . expr '|' expr
   17     | . expr '=' expr
   18     | . '(' expr ')'
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 6

    expr     go to state 33
    primary  go to state 11


state 22

    7 expr: . primary
    8     | . '-' expr
    9     | . '+' expr
   10     | . expr '+' expr
   11     | . expr '-' expr
   11     | expr '-' . expr
   12     | . expr '*' expr
   13     | . expr '/' expr
   14     | . expr '%' expr
   15     | . expr '&' expr
   16     | . expr '|' expr
   17     | . expr '=' expr
   18     | . '(' expr ')'
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 6

    expr     go to state 34
    primary  go to state 11


state 23

    7 expr: . primary
    8     | . '-' expr
    9     | . '+' expr
   10     | . expr '+' expr
   11     | . expr '-' expr
   12     | . expr '*' expr
   12     | expr '*' . expr
   13     | . expr '/' expr
   14     | . expr '%' expr
   15     | . expr '&' expr
   16     | . expr '|' expr
   17     | . expr '=' expr
   18     | . '(' expr ')'
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 6

    expr     go to state 35
    primary  go to state 11


state 24

    7 expr: . primary
    8     | . '-' expr
    9     | . '+' expr
   10     | . expr '+' expr
   11     | . expr '-' expr
   12     | . expr '*' expr
   13     | . expr '/' expr
   13     | expr '/' . expr
   14     | . expr '%' expr
   15     | . expr '&' expr
   16     | . expr '|' expr
   17     | . expr '=' expr
   18     | . '(' expr ')'
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 6

    expr     go to state 36
    primary  go to state 11


state 25

    7 expr: . primary
    8     | . '-' expr
    9     | . '+' expr
   10     | . expr '+' expr
   11     | . expr '-' expr
   12     | . expr '*' expr
   13     | . expr '/' expr
   14     | . expr '%' expr
   14     | expr '%' . expr
   15     | . expr '&' expr
   16     | . expr '|' expr
   17     | . expr '=' expr
   18     | . '(' expr ')'
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 6

    expr     go to state 37
    primary  go to state 11


state 26

    6 statement: expr ';' .

    $default  reduce using rule 6 (statement)


state 27

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '%' expr
   15     | expr . '&' expr
   16     | expr . '|' expr
   17     | expr . '=' expr
   20 fn_expr: expr .  [')', ',']

    '='  shift, and go to state 18
    '|'  shift, and go to state 19
    '&'  shift, and go to state 20
    '+'  shift, and go to state 21
    '-'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '%'  shift, and go to state 25

    $default  reduce using rule 20 (fn_expr)


state 28

   21 fn_expr: fn_expr . ',' expr
   24 primary: IDENTIFIER '(' fn_expr . ')'

    ')'  shift, and go to state 38
    ','  shift, and go to state 39


state 29

   18 expr: '(' expr ')' .

    $default  reduce using rule 18 (expr)


state 30

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '%' expr
   15     | expr . '&' expr
   16     | expr . '|' expr
   17     | expr . '=' expr  [';', ')', ',']
   17     | expr '=' expr .  [';', ')', ',']

    '='  shift, and go to state 18
    '|'  shift, and go to state 19
    '&'  shift, and go to state 20
    '+'  shift, and go to state 21
    '-'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '%'  shift, and go to state 25

    $default  reduce using rule 17 (expr)

    Conflict between rule 17 and token '=' resolved as shift (%right '=').
    Conflict between rule 17 and token '|' resolved as shift ('=' < '|').
    Conflict between rule 17 and token '&' resolved as shift ('=' < '&').
    Conflict between rule 17 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 17 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 17 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 17 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 17 and token '%' resolved as shift ('=' < '%').


state 31

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '%' expr
   15     | expr . '&' expr
   16     | expr . '|' expr  ['=', '|', ';', ')', ',']
   16     | expr '|' expr .  ['=', '|', ';', ')', ',']
   17     | expr . '=' expr

    '&'  shift, and go to state 20
    '+'  shift, and go to state 21
    '-'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '%'  shift, and go to state 25

    $default  reduce using rule 16 (expr)

    Conflict between rule 16 and token '=' resolved as reduce ('=' < '|').
    Conflict between rule 16 and token '|' resolved as reduce (%left '|').
    Conflict between rule 16 and token '&' resolved as shift ('|' < '&').
    Conflict between rule 16 and token '+' resolved as shift ('|' < '+').
    Conflict between rule 16 and token '-' resolved as shift ('|' < '-').
    Conflict between rule 16 and token '*' resolved as shift ('|' < '*').
    Conflict between rule 16 and token '/' resolved as shift ('|' < '/').
    Conflict between rule 16 and token '%' resolved as shift ('|' < '%').


state 32

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '%' expr
   15     | expr . '&' expr  ['=', '|', '&', ';', ')', ',']
   15     | expr '&' expr .  ['=', '|', '&', ';', ')', ',']
   16     | expr . '|' expr
   17     | expr . '=' expr

    '+'  shift, and go to state 21
    '-'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '%'  shift, and go to state 25

    $default  reduce using rule 15 (expr)

    Conflict between rule 15 and token '=' resolved as reduce ('=' < '&').
    Conflict between rule 15 and token '|' resolved as reduce ('|' < '&').
    Conflict between rule 15 and token '&' resolved as reduce (%left '&').
    Conflict between rule 15 and token '+' resolved as shift ('&' < '+').
    Conflict between rule 15 and token '-' resolved as shift ('&' < '-').
    Conflict between rule 15 and token '*' resolved as shift ('&' < '*').
    Conflict between rule 15 and token '/' resolved as shift ('&' < '/').
    Conflict between rule 15 and token '%' resolved as shift ('&' < '%').


state 33

   10 expr: expr . '+' expr  ['=', '|', '&', '+', '-', ';', ')', ',']
   10     | expr '+' expr .  ['=', '|', '&', '+', '-', ';', ')', ',']
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '%' expr
   15     | expr . '&' expr
   16     | expr . '|' expr
   17     | expr . '=' expr

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '%'  shift, and go to state 25

    $default  reduce using rule 10 (expr)

    Conflict between rule 10 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 10 and token '|' resolved as reduce ('|' < '+').
    Conflict between rule 10 and token '&' resolved as reduce ('&' < '+').
    Conflict between rule 10 and token '+' resolved as reduce (%left '+').
    Conflict between rule 10 and token '-' resolved as reduce (%left '-').
    Conflict between rule 10 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 10 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 10 and token '%' resolved as shift ('+' < '%').


state 34

   10 expr: expr . '+' expr
   11     | expr . '-' expr  ['=', '|', '&', '+', '-', ';', ')', ',']
   11     | expr '-' expr .  ['=', '|', '&', '+', '-', ';', ')', ',']
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '%' expr
   15     | expr . '&' expr
   16     | expr . '|' expr
   17     | expr . '=' expr

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '%'  shift, and go to state 25

    $default  reduce using rule 11 (expr)

    Conflict between rule 11 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 11 and token '|' resolved as reduce ('|' < '-').
    Conflict between rule 11 and token '&' resolved as reduce ('&' < '-').
    Conflict between rule 11 and token '+' resolved as reduce (%left '+').
    Conflict between rule 11 and token '-' resolved as reduce (%left '-').
    Conflict between rule 11 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 11 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 11 and token '%' resolved as shift ('-' < '%').


state 35

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr  ['=', '|', '&', '+', '-', '*', '/', '%', ';', ')', ',']
   12     | expr '*' expr .  ['=', '|', '&', '+', '-', '*', '/', '%', ';', ')', ',']
   13     | expr . '/' expr
   14     | expr . '%' expr
   15     | expr . '&' expr
   16     | expr . '|' expr
   17     | expr . '=' expr

    $default  reduce using rule 12 (expr)

    Conflict between rule 12 and token '=' resolved as reduce ('=' < '*').
    Conflict between rule 12 and token '|' resolved as reduce ('|' < '*').
    Conflict between rule 12 and token '&' resolved as reduce ('&' < '*').
    Conflict between rule 12 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 12 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 12 and token '*' resolved as reduce (%left '*').
    Conflict between rule 12 and token '/' resolved as reduce (%left '/').
    Conflict between rule 12 and token '%' resolved as reduce (%left '%').


state 36

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr  ['=', '|', '&', '+', '-', '*', '/', '%', ';', ')', ',']
   13     | expr '/' expr .  ['=', '|', '&', '+', '-', '*', '/', '%', ';', ')', ',']
   14     | expr . '%' expr
   15     | expr . '&' expr
   16     | expr . '|' expr
   17     | expr . '=' expr

    $default  reduce using rule 13 (expr)

    Conflict between rule 13 and token '=' resolved as reduce ('=' < '/').
    Conflict between rule 13 and token '|' resolved as reduce ('|' < '/').
    Conflict between rule 13 and token '&' resolved as reduce ('&' < '/').
    Conflict between rule 13 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 13 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 13 and token '*' resolved as reduce (%left '*').
    Conflict between rule 13 and token '/' resolved as reduce (%left '/').
    Conflict between rule 13 and token '%' resolved as reduce (%left '%').


state 37

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '%' expr  ['=', '|', '&', '+', '-', '*', '/', '%', ';', ')', ',']
   14     | expr '%' expr .  ['=', '|', '&', '+', '-', '*', '/', '%', ';', ')', ',']
   15     | expr . '&' expr
   16     | expr . '|' expr
   17     | expr . '=' expr

    $default  reduce using rule 14 (expr)

    Conflict between rule 14 and token '=' resolved as reduce ('=' < '%').
    Conflict between rule 14 and token '|' resolved as reduce ('|' < '%').
    Conflict between rule 14 and token '&' resolved as reduce ('&' < '%').
    Conflict between rule 14 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 14 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 14 and token '*' resolved as reduce (%left '*').
    Conflict between rule 14 and token '/' resolved as reduce (%left '/').
    Conflict between rule 14 and token '%' resolved as reduce (%left '%').


state 38

   24 primary: IDENTIFIER '(' fn_expr ')' .

    $default  reduce using rule 24 (primary)


state 39

    7 expr: . primary
    8     | . '-' expr
    9     | . '+' expr
   10     | . expr '+' expr
   11     | . expr '-' expr
   12     | . expr '*' expr
   13     | . expr '/' expr
   14     | . expr '%' expr
   15     | . expr '&' expr
   16     | . expr '|' expr
   17     | . expr '=' expr
   18     | . '(' expr ')'
   21 fn_expr: fn_expr ',' . expr
   22 primary: . CONSTANT
   23        | . IDENTIFIER
   24        | . IDENTIFIER '(' fn_expr ')'

    IDENTIFIER  shift, and go to state 1
    CONSTANT    shift, and go to state 2
    '+'         shift, and go to state 3
    '-'         shift, and go to state 4
    '('         shift, and go to state 6

    expr     go to state 40
    primary  go to state 11


state 40

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '%' expr
   15     | expr . '&' expr
   16     | expr . '|' expr
   17     | expr . '=' expr
   21 fn_expr: fn_expr ',' expr .  [')', ',']

    '='  shift, and go to state 18
    '|'  shift, and go to state 19
    '&'  shift, and go to state 20
    '+'  shift, and go to state 21
    '-'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '%'  shift, and go to state 25

    $default  reduce using rule 21 (fn_expr)
